#!/usr/bin/zsh

stty -ixon -ixoff

autoload -U promptinit
promptinit
prompt suse

#autoload -U checkmail            # needed for my prompt
autoload -U colors && colors     # make ${f,b}g{,_{,no_}bold} available
autoload -U edit-command-line    # later bound to C-z e or v in vi-cmd-mode
#autoload -U zed                  # what, your shell can't edit files? ["zed -f function"]
#autoload -U zmv                  # who needs mmv or rename? ["zmv '(*).lis' '\$1.txt"]

export WORDCHARS=''
bindkey -e                       # force keybindings no matter what $VISUAL and $EDITOR say

zmodload -i zsh/complist         # e.g. menu-select widget, list-colors [color specifications]
#zmodload -a zsh/stat stat
#zmodload -a zsh/zpty zpty
#zmodload -a zsh/zprof zprof
zmodload -ap zsh/mapfile mapfile

autoload -U compinit
compinit



[[ ! -e ~/.zsh/zshlocal ]] && cp -v ~/.templates/zshlocal ~/.zsh/zshlocal
[[ -e ~/.emacs.d ]] && [[ ! -e ~/.emacs.d/local.el ]] && cp -v ~/.templates/local.el ~/.emacs.d/local.el

if [ -d $HOME/.zsh ]
then
    for f in $HOME/.zsh/completion $HOME/.zsh/zshuser-$USER $HOME/.zsh/zshlocal
    do
        [ -e $f ] && source $f
    done
fi


HISTFILE=$HOME/.zsh/history

watch=(notme)
setopt notify nohup
setopt hist_ignore_space hist_ignore_dups hist_reduce_blanks
setopt hist_verify appendhistory sharehistory
setopt EXTENDEDHISTORY
setopt extended_glob
HISTSIZE=100000
SAVEHIST=100000

REPORTTIME=10



export PAGER=less
export CVS_RSH=ssh

export PATH=$PATH:~/.bin

export SCREEN_CAPTION_COLOR="`hostname |md5sum |head -c 1 |tr 0123456789abcdef YRGBCYMRGBCMYRGB`"

export TIMEFMT="%U user %S system %P cpu %*E total, running %J"
export COLORTERM=yes

eval $(lessfile)
eval $(dircolors)
export LESSCHARSET=UTF-8
export LESS='-iFRSX'

alias ls='ls --color=auto --classify'


SSH_ASKPASS=`which ssh-askpass`
[[ $? = 0 ]] && export SSH_ASKPASS





# case dispatch on running local screen, meta screen or no screen at all (yet)
case $STY in
    *.local)
        preexec () {
            local CMD=${1[(wr)^(*=*|sudo|ssh|-*)]}       # dont't use hostname
            echo -ne "\ek$CMD\e\\"
            SCREENTITLE=$'%{\ekzsh\e\\%}'

            if [ `klist --test &>/dev/null ; echo $?` = 0 -a ! -z $KRB5CCNAME ]; then
                echo "export KRB5CCNAME=$KRB5CCNAME" >$HOME/.krb5ccname.sh
            elif [ -f $HOME/.krb5ccname.sh ]; then
                source $HOME/.krb5ccname.sh
                if [ ! `klist --test &>/dev/null ; echo $?` = 0 ]; then
                    rm $HOME/.krb5ccname.sh
                    unset KRB5CCNAME
                fi
            fi

            if [ -e /tmp/emacs`id -u`/server -o -e /tmp/esrv`id -u`-`hostname` ]; then
                if [ -f /usr/bin/emacsclient.emacs-snapshot ]; then
                    export EDITOR="emacsclient -c"
                else
                    export EDITOR="emacsclient"
                fi
            elif [ -f /usr/bin/zile ]; then
                export EDITOR="zile"
            elif [ -f /usr/bin/nano ]; then
                export EDITOR="nano"
            elif [ -f /usr/bin/vim ]; then
                export EDITOR="vim"
            fi
            export VISUAL=$EDITOR
        }
        precmd () {
            RPROMPT="%(?..:()% ${SCREENTITLE}"
        }
        ;;
    *.meta)
        preexec () {
            local CMD=${1[(wr)^(*=*|sudo|ssh|-*)]}       # dont't use hostname
            CMD=`echo $CMD|cut -f 1 -d "."`
            echo -ne "\ek$CMD\e\\"
            SCREENTITLE=$'%{\ekzsh\e\\%}'

            if [ `klist --test &>/dev/null ; echo $?` = 0 -a ! -z $KRB5CCNAME ]; then
                echo "export KRB5CCNAME=$KRB5CCNAME" >$HOME/.krb5ccname.sh
            elif [ -f $HOME/.krb5ccname.sh ]; then
                source $HOME/.krb5ccname.sh
                if [ ! `klist --test &>/dev/null ; echo $?` = 0 ]; then
                    rm $HOME/.krb5ccname.sh
                    unset KRB5CCNAME
                fi
            fi

            [[ -e /usr/bin/keychain ]] && [[ `ssh-add -l &>/dev/null ; echo $?` = 2 ]] && keychain -q && source $HOME/.keychain/$HOST-sh
        }
        precmd () {
            RPROMPT="%(?..:()% ${SCREENTITLE}"
        }
        ;;
    *)
        if [ -z $SSH_TTY ]; then
            case `hostname` in
                lnx-vie-003)
                    sudo invoke-rc.d openvpn start lefant
                    ;;
                *)
                    ;;
            esac
            [[ -e /usr/bin/afuse ]] && touch /dev/fuse &>/dev/null && \
                afuse -o mount_template="sshfs -o reconnect %r: %m" -o unmount_template="fusermount -u -z %m" ~/sshfs/ &

            # run zeiterfassung start
	    cd ~/shared/arbeitszeit/`hostname`
	    echo "arrived **" |~/shared/code/python/timelog/timelog.py
	    cd ~
	    unison -silent &

            screen -a -A -d -RR -S meta "-e^Oo" -c .screenrc.meta
	    
            # run zeiterfassung end
	    cd ~/shared/arbeitszeit/`hostname`
	    echo "work" |~/shared/code/python/timelog/timelog.py
	    unison -silent &
	    killall afuse
            kdestroy
            rm /tmp/krb5cc_*
        else
            screen -a -A -d -RR -S local
        fi
        ;;
esac
